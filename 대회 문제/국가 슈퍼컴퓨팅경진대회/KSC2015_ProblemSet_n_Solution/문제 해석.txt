1. 평범하게 isend irecv 사용했음 총 코어수 *2개의 통신을 했지만 
   생성하는데에서 시간 소모 추가로 wait에서 시간소모 
   1번이 정석 문제 였고 우리 점수가 113% 였으며 상위는 80%90%대였다.

2. rhs함수가 대량많음 rhs 함수를 건들려면 isend irev해야하는데 이러나 저러나 통신이 수천배 많아짐
   따라서 rhs함수를 호출하는 외부 for문을 건들여야 했음.... 건들였었는데 parameta오류
   왜 생겼을까 생각했는데 remain 정의하는 if 문 따올때 시작과 끝이 한개 씩 없음.....
   3번문제에서 따오다가 실수 ㅅㅂ 이것 땜에 평가 받을때 답이 적었던거

3. 3번 문제를 보고 코드 검사를 안한다는 사실을 총 1억개의 자료를 범위에 맞게 가져야 하는데 최소 1억/32번의 통신을 해야함
   나는 reduce로 자신이 가져야할 총 갯수를 알고 그 갯수에 맞게 내용물들을 통신을 했음
   그러나 사람들은 난수를 옮기지 않고 자기의 범위가 아닌 것들을 범위가 맞는 값으로 그냥 초기화 시킴
   초기화 하는데 1초 걸린다 해도 5~ 6초대가 나옴 ㅅㅂ 